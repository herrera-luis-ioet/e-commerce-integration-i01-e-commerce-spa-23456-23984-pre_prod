{"is_source_file": true, "format": "TypeScript", "description": "A service module that provides methods for interacting with product API endpoints and handles real and mock data operations for fetching, filtering, and managing products.", "external_files": ["./api", "./mockData", "../types/product.types"], "external_methods": ["apiClient.get", "handleApiError", "filterMockProducts", "paginateMockProducts"], "published": ["productService"], "classes": [], "methods": [{"name": "getProducts", "description": "Fetches products with optional filtering, sorting, and pagination. Falls back to mock data if the API call fails."}, {"name": "getProductById", "description": "Fetches a single product by its ID and falls back to mock data if the API call fails."}, {"name": "searchProducts", "description": "Searches products by a query string, providing options for pagination. Falls back to mock data if the API call fails."}, {"name": "filterProducts", "description": "Filters products based on specified criteria and provides pagination. Uses mock data instead of API for development."}, {"name": "getProductsByCategory", "description": "Retrieves products filtered by category with pagination support. Uses mock data instead of API for development."}, {"name": "getSortedProducts", "description": "Gets products sorted by a specified option with pagination support. Uses mock data instead of API for development."}, {"name": "getFeaturedProducts", "description": "Retrieves featured products and applies pagination. Uses mock data instead of API for development."}, {"name": "getNewProducts", "description": "Retrieves new products and applies pagination. Uses mock data instead of API for development."}, {"name": "getProductsByBrand", "description": "Retrieves products filtered by brand with pagination support. Uses mock data instead of API for development."}, {"name": "getProductsByTag", "description": "Retrieves products filtered by a tag with pagination support. Uses mock data instead of API for development."}, {"name": "getProductsOnSale", "description": "Retrieves products that are on sale with pagination support. Uses mock data instead of API for development."}], "calls": ["apiClient.get<ProductsResponse>", "apiClient.get<ProductResponse>", "apiClient.get<ProductsResponse>", "apiClient.get<ProductsResponse>", "apiClient.get<ProductsResponse>", "apiClient.get<ProductsResponse>", "apiClient.get<ProductsResponse>", "apiClient.get<ProductsResponse>", "apiClient.get<ProductsResponse>", "apiClient.get<ProductsResponse>", "apiClient.get<ProductsResponse>"], "search-terms": ["product service", "API interaction", "product management", "mock data fallback"], "state": 2, "file_id": 22, "knowledge_revision": 158, "git_revision": "61140a383c2863c39fcbc01d490570a0954b694f", "revision_history": [{"46": ""}, {"100": "42d8694f1699fa171354a043d144f859dd3f2af7"}, {"101": "42d8694f1699fa171354a043d144f859dd3f2af7"}, {"102": "42d8694f1699fa171354a043d144f859dd3f2af7"}, {"103": "42d8694f1699fa171354a043d144f859dd3f2af7"}, {"104": "42d8694f1699fa171354a043d144f859dd3f2af7"}, {"105": "42d8694f1699fa171354a043d144f859dd3f2af7"}, {"106": "42d8694f1699fa171354a043d144f859dd3f2af7"}, {"109": "42d8694f1699fa171354a043d144f859dd3f2af7"}, {"155": "61140a383c2863c39fcbc01d490570a0954b694f"}, {"156": "61140a383c2863c39fcbc01d490570a0954b694f"}, {"157": "61140a383c2863c39fcbc01d490570a0954b694f"}, {"158": "61140a383c2863c39fcbc01d490570a0954b694f"}], "ctags": [{"_type": "tag", "name": "featuredProducts", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "pattern": "/^      const featuredProducts = mockProducts.filter(product => product.isFeatured);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "filteredProducts", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "pattern": "/^        const filteredProducts = mockProducts.filter(product => $/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "filteredProducts", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "pattern": "/^      const filteredProducts = filterMockProducts(mockProducts, filterOptions);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "filteredProducts", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "pattern": "/^      const filteredProducts = mockProducts.filter(product => $/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "newProducts", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "pattern": "/^      const newProducts = mockProducts$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "productService", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "pattern": "/^const productService = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "pattern": "/^        const response = await apiClient.get<ProductsResponse>('\\/products\\/search', {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "saleProducts", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "pattern": "/^      const saleProducts = mockProducts.filter(product => $/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "sortedProducts", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "pattern": "/^      let sortedProducts = [...mockProducts];$/", "language": "TypeScript", "kind": "variable"}], "filename": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/services/productService.ts", "hash": "18c74f6bde71c9deb740e8cd61626b87", "format-version": 4, "code-base-name": "default", "fields": [{"name": "let sortedProducts = [...mockProducts];", "scope": "", "scopeKind": "", "description": "unavailable"}]}