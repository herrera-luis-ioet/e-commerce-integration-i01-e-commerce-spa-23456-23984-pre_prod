{"is_source_file": true, "format": "TypeScript", "description": "Custom typed hooks for Redux that provide type safety when working with Redux state and dispatch.", "external_files": ["./index"], "external_methods": ["useDispatch", "useSelector"], "published": ["useAppDispatch", "useAppSelector"], "classes": [], "methods": [], "calls": ["useDispatch<AppDispatch>", "useSelector"], "search-terms": ["Redux", "hooks", "TypedUseSelectorHook"], "state": 2, "file_id": 18, "knowledge_revision": 37, "git_revision": "", "ctags": [{"_type": "tag", "name": "useAppDispatch", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/store/hooks.ts", "pattern": "/^export const useAppDispatch = () => useDispatch<AppDispatch>();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "useAppSelector", "path": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/store/hooks.ts", "pattern": "/^export const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;/", "language": "TypeScript", "kind": "constant"}], "filename": "/home/kavia/workspace/e-commerce-integration-i01-e-commerce-spa-23456-23984-pre_prod/src/store/hooks.ts", "hash": "f30630e08d4afa047af0cabb185252c1", "format-version": 4, "code-base-name": "default", "revision_history": [{"37": ""}]}